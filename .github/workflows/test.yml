name: "units-test"
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
jobs:
  # unit tests
  units:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: npm ci
    - run: npm test
  # test action works running
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Exercise
      uses: ./
      id: exercise
      with:
        file: test.yaml
        get1: Parameters.XData1.Default
        get2: Parameters.XData2.Default
        get3: Parameters.XData3.Default
        get4: Parameters.XData4.Default
        get5: Parameters.XData5.Default
    - name: Assert
      run: |
        value1="${{ steps.exercise.outputs.value1 }}"
        value2="${{ steps.exercise.outputs.value2 }}"
        value3="${{ steps.exercise.outputs.value3 }}"
        value4="${{ steps.exercise.outputs.value4 }}"
        value5="${{ steps.exercise.outputs.value5 }}"
        echo "Found value1: ${value1}"
        echo "Found value2: ${value2}"
        echo "Found value3: ${value3}"
        echo "Found value4: ${value4}"
        echo "Found value5: ${value5}"
        if [ "${value1}" = "x-data-1" ]; then
          echo "value1 âœ…"
        else
          echo "value1 ðŸš«"
          exit 1
        fi
        if [ "${value2}" = "x-data-2" ]; then
          echo "value2 âœ…"
        else
          echo "value2 ðŸš«"
          exit 1
        fi
        if [ "${value3}" = "x-data-3" ]; then
          echo "value3 âœ…"
        else
          echo "value3 ðŸš«"
          exit 1
        fi
        if [ "${value4}" = "x-data-4" ]; then
          echo "value4 âœ…"
        else
          echo "value4 ðŸš«"
          exit 1
        fi
        if [ "${value5}" = "x-data-5" ]; then
          echo "value5 âœ…"
        else
          echo "value5 ðŸš«"
          exit 1
        fi
